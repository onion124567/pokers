{"version":3,"sources":["assets\\scripts\\Game.js"],"names":["PokerUtil","require","cc","Class","Component","properties","starPrefab","type","Prefab","cardPrefab","maxStarDuration","minStarDuration","currentCardPosition","startCardPostion","cardWidth","cardArray","String","pokerPlayer","roundPoker","playerControlNodeArray","refreshButton","Button","sendButton","currentWinner","gameHost","layoutContainer","Layout","layoutBottom","layoutTop","layoutLeft","layoutRight","logLabel","Label","playLog","ground","Node","player","scoreDisplay","scoreAudio","AudioClip","onLoad","groundY","y","height","timer","starDuration","i","pre","j","str","push","node","on","refreshCallback","sendCallback","publishPokers","score","button","testArray","destoryArray","length","getComponent","isCheck","console","log","quaryPokerValue","picNum","saveRoundPoker","destroy","splice","testLogic","appendLog","index","offset","newStar","instantiate","scaleX","scaleY","addChild","spawnNewStar","setPosition","getNewStarPosition","game","Math","random","spawnBottomCard","destoryNode","createBottomCard","startPosition","randX","randY","jumpHeight","maxX","width","v2","getCardBottomPosition","update","dt","gainScore","string","audioEngine","playEffect","gameOver","stopAllActions","director","loadScene","pokerArray","slice","host","parseInt","playerPokerArray","pokerNum","value","quaryPokerTypeValue","quaryType","expandPlayer","location"],"mappings":"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","sourceRoot":"/","sourcesContent":["\n let PokerUtil = require(\"PokerUtil\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        cardPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        currentCardPosition: 0,\n        startCardPostion: 0,\n        cardWidth: 80,\n        \n        cardArray: [cc.String],\n        //初始牌数组 逆时针 主角是第一个数组\n        pokerPlayer: [],\n        //当前轮次出牌节点,\n        roundPoker: [],\n        //主角当前牌节点\n        playerControlNodeArray: [],\n        //洗牌\n        refreshButton: {\n            default: null,\n            type: cc.Button\n        },\n        //出牌\n        sendButton: {\n            default: null,\n            type: cc.Button\n        },\n\n        //当前胜方\n        currentWinner:1,\n        //本轮主\n        gameHost:\"1\",\n        //玩家拥有牌\n        layoutContainer:{\n            default:null,\n            type:cc.Layout\n        },\n        //玩家出的牌 \n        layoutBottom:{\n            default:null,\n            type:cc.Layout\n        },\n        //对家出牌 第三位\n        layoutTop:{\n            default:null,\n            type:cc.Layout\n        },\n        //下家出牌 左手第二位\n        layoutLeft:{\n            default:null,\n            type:cc.Layout\n        },\n         //上家出牌，右手第四位\n        layoutRight:{\n            default:null,\n            type:cc.Layout\n        },\n        //战报\n        logLabel:{\n            default:null,\n            type:cc.Label\n        },\n        playLog:\"游戏开始\",\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n    },\n\n    onLoad: function () {\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height / 2;\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n        //创建图片资源\n        for (let i = 0; i < 13; i++) {\n            let pre = 3 + i;\n            for (let j = 1; j < 5; j++) {\n                let str = \"\";\n                if (pre < 10) {\n                    str = \"0\";\n                }\n                str = str + pre + j;\n                this.cardArray.push(str);\n                this.cardArray.push(str);\n            }\n        }\n        this.cardArray.push(\"161\");\n        this.cardArray.push(\"161\");\n        this.cardArray.push(\"171\");\n        this.cardArray.push(\"171\");\n\n\n        this.refreshButton.node.on('click', this.refreshCallback, this);\n        this.sendButton.node.on('click', this.sendCallback, this);\n        this.publishPokers();\n        // this.spawnNewStar();\n        // 初始化计分\n        this.score = 0;\n    },\n    refreshCallback: function (button) {\n        this.publishPokers();\n    },\n    sendCallback: function (button) {\n        let testArray=[];\n        PokerUtil.destoryArray(this.roundPoker);\n        for (let i = 0; i < this.playerControlNodeArray.length;) {\n            //判断是否可出\n            let node = this.playerControlNodeArray[i].getComponent('Card');\n            if (node.isCheck) {\n                console.log(\"onion 选中\" + PokerUtil.quaryPokerValue(node.picNum));\n                testArray.push(node.picNum);\n                this.saveRoundPoker(node.picNum, 1, i * this.cardWidth);\n                this.playerControlNodeArray[i].destroy();\n                this.playerControlNodeArray.splice(i, 1);\n            } else {\n                i++;\n            }\n            // this.playerControlNodeArray[i].destroy();\n        }\n         PokerUtil.testLogic(testArray);\n         this.appendLog(\"追加牌内容\");\n    },\n    //保存出牌  1 2 3 4 顺时针位\n    saveRoundPoker: function (picNum, index, offset) {\n        var newStar = cc.instantiate(this.cardPrefab);\n        // newStar.setPicNum(\"i\"+i);\n        newStar.getComponent('Card').picNum = picNum;\n        newStar.scaleX = 0.5;\n        newStar.scaleY = 0.5;\n        this.roundPoker.push(newStar);\n        // this.node.addChild(newStar);\n        // let height = this.ground.height / 2 * -1;\n        if (index === 1) {\n            // height = height + 100;\n            this.layoutBottom.node.addChild(newStar);\n        }\n        // newStar.setPosition(cc.v2(-150 + this.startCardPostion + offset, height));\n    },\n    spawnNewStar: function () {\n        // 使用给定的模板在场景中生成一个新节点\n        var newStar = cc.instantiate(this.starPrefab);\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n        // 在星星组件上暂存 Game 对象的引用\n        newStar.getComponent('Star').game = this;\n        // 重置计时器，根据消失时间范围随机取一个值\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n    /**\n     * 移除旧的节点\n     * 添加新节点\n     */\n    spawnBottomCard: function () {\n        if (this.playerControlNodeArray.length > 0) {\n            let destoryNode = this.playerControlNodeArray;\n            PokerUtil.destoryArray(destoryNode);\n            this.playerControlNodeArray = [];\n        }\n        console.log(\"spawnBottomCard \" + this.pokerPlayer[0].length);\n        this.createBottomCard()\n\n    },\n\n    createBottomCard: function () {\n\n        let startPosition = 0;\n        for (let i = 0; i < this.pokerPlayer[0].length; i++) {\n            // 使用给定的模板在场景中生成一个新节点\n            var newStar = cc.instantiate(this.cardPrefab);\n            // newStar.setPicNum(\"i\"+i);\n            newStar.getComponent('Card').picNum = this.pokerPlayer[0][i];\n            this.playerControlNodeArray.push(newStar);\n            // this.node.addChild(newStar);\n            this.layoutContainer.node.addChild(newStar);\n            let height = this.ground.height / 2 * -1;\n            startPosition = i * this.cardWidth;\n            if (i > 13) {\n                height = height - 150\n                startPosition = (i - 13) * this.cardWidth;\n            }\n            // newStar.setPosition(cc.v2(-200 + this.startCardPostion + startPosition, height));\n        }\n    },\n\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width / 2;\n        randX = (Math.random() - 0.5) * 2 * maxX;\n        // 返回星星坐标\n        return cc.v2(randX, randY);\n    },\n    getCardBottomPosition: function () {\n        var randX = this.currentCardPosition;\n        var randY = 0;\n        this.currentCardPosition = this.currentCardPosition + this.cardWidth;\n        return cc.v2(randX, randY);\n    },\n\n    update: function (dt) {\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        // if (this.timer > this.starDuration) {\n        //     this.gameOver();\n        //     this.enabled = false;   // disable gameOver logic to avoid load scene repeatedly\n        //     return;\n        // }\n        // this.timer += dt;\n    },\n\n    gainScore: function () {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score;\n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    gameOver: function () {\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\n        cc.director.loadScene('game');\n    },\n\n    /**\n    * 把牌发给四家\n    */\n    publishPokers: function () {\n        this.pokerPlayer = [];\n        let pokerArray = this.cardArray.slice(0);\n        let host=parseInt(Math.random() * 4);\n        for (let i = 0; i < 4; i++) {\n            let playerPokerArray = [];\n            for (let j = 0; j < 27; j++) {\n                let pokerNum = Math.random() * pokerArray.length;\n                pokerNum = parseInt(pokerNum);\n                let value = pokerArray.splice(pokerNum, 1);\n                playerPokerArray.push(value);\n                if(i==host&&j==26){\n                    //随机方的最后一张牌做主\n                    this.gameHost= PokerUtil.quaryPokerTypeValue(value);\n                    this.appendLog(\"本轮游戏主\"+PokerUtil.quaryType(this.gameHost)\n                    +\",主牌\"+PokerUtil.quaryPokerValue(value)+\"在\"+this.expandPlayer(i));\n                }\n            }\n            this.pokerPlayer.push(playerPokerArray);\n        }\n        this.spawnBottomCard();\n\n    },\n    expandPlayer:function(location){\n        switch(location){\n            case 0:return \"自己\"\n            case 1:return \"下家\"\n            case 2:return \"对家\"\n            case 3:return \"上家\"   \n        }\n\n    },\n    appendLog:function(string){\n        this.playLog=this.playLog+\"\\n\"+string;\n        this.logLabel.string=this.playLog;\n    }\n    \n    \n\n\n\n});\n"]}