
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Game.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4e12fLSQu1L+KV6QmxDiavU', 'Game');
// scripts/Game.js

"use strict";

var PokerUtil = require("PokerUtil");

cc.Class({
  "extends": cc.Component,
  properties: {
    // 这个属性引用了星星预制资源
    starPrefab: {
      "default": null,
      type: cc.Prefab
    },
    cardPrefab: {
      "default": null,
      type: cc.Prefab
    },
    // 星星产生后消失时间的随机范围
    maxStarDuration: 0,
    minStarDuration: 0,
    currentCardPosition: 0,
    startCardPostion: 0,
    cardWidth: 80,
    cardArray: [cc.String],
    //初始牌数组 逆时针 主角是第一个数组
    pokerPlayer: [],
    //当前轮次出牌节点,
    roundPoker: [],
    //主角当前牌节点
    playerControlNodeArray: [],
    //洗牌
    refreshButton: {
      "default": null,
      type: cc.Button
    },
    //出牌
    sendButton: {
      "default": null,
      type: cc.Button
    },
    //当前主
    currentWinner: 1,
    layoutContainer: {
      "default": null,
      type: cc.Layout
    },
    layoutBottom: {
      "default": null,
      type: cc.Layout
    },
    layoutTop: {
      "default": null,
      type: cc.Layout
    },
    layoutLeft: {
      "default": null,
      type: cc.Layout
    },
    layoutRight: {
      "default": null,
      type: cc.Layout
    },
    // 地面节点，用于确定星星生成的高度
    ground: {
      "default": null,
      type: cc.Node
    },
    // player 节点，用于获取主角弹跳的高度，和控制主角行动开关
    player: {
      "default": null,
      type: cc.Node
    },
    // score label 的引用
    scoreDisplay: {
      "default": null,
      type: cc.Label
    },
    // 得分音效资源
    scoreAudio: {
      "default": null,
      type: cc.AudioClip
    }
  },
  onLoad: function onLoad() {
    // 获取地平面的 y 轴坐标
    this.groundY = this.ground.y + this.ground.height / 2; // 初始化计时器

    this.timer = 0;
    this.starDuration = 0; //创建图片资源

    for (var i = 0; i < 13; i++) {
      var pre = 3 + i;

      for (var j = 1; j < 5; j++) {
        var str = "";

        if (pre < 10) {
          str = "0";
        }

        str = str + pre + j;
        this.cardArray.push(str);
        this.cardArray.push(str);
      }
    }

    this.cardArray.push("161");
    this.cardArray.push("161");
    this.cardArray.push("171");
    this.cardArray.push("171");
    this.refreshButton.node.on('click', this.refreshCallback, this);
    this.sendButton.node.on('click', this.sendCallback, this);
    this.publishPokers(); // this.spawnNewStar();
    // 初始化计分

    this.score = 0;
  },
  refreshCallback: function refreshCallback(button) {
    this.publishPokers();
  },
  sendCallback: function sendCallback(button) {
    var testArray = [];
    PokerUtil.destoryArray(this.roundPoker);

    for (var i = 0; i < this.playerControlNodeArray.length;) {
      //判断是否可出
      var node = this.playerControlNodeArray[i].getComponent('Card');

      if (node.isCheck) {
        console.log("onion 选中" + PokerUtil.quaryPokerValue(node.picNum));
        testArray.push(node.picNum);
        this.saveRoundPoker(node.picNum, 1, i * this.cardWidth);
        this.playerControlNodeArray[i].destroy();
        this.playerControlNodeArray.splice(i, 1);
      } else {
        i++;
      } // this.playerControlNodeArray[i].destroy();

    }

    PokerUtil.testLogic(testArray);
  },
  //保存出牌  1 2 3 4 顺时针位
  saveRoundPoker: function saveRoundPoker(picNum, index, offset) {
    var newStar = cc.instantiate(this.cardPrefab); // newStar.setPicNum("i"+i);

    newStar.getComponent('Card').picNum = picNum;
    newStar.scaleX = 0.5;
    newStar.scaleY = 0.5;
    this.roundPoker.push(newStar); // this.node.addChild(newStar);
    // let height = this.ground.height / 2 * -1;

    if (index === 1) {
      // height = height + 100;
      this.layoutBottom.node.addChild(newStar);
    } // newStar.setPosition(cc.v2(-150 + this.startCardPostion + offset, height));

  },
  spawnNewStar: function spawnNewStar() {
    // 使用给定的模板在场景中生成一个新节点
    var newStar = cc.instantiate(this.starPrefab); // 将新增的节点添加到 Canvas 节点下面

    this.node.addChild(newStar); // 为星星设置一个随机位置

    newStar.setPosition(this.getNewStarPosition()); // 在星星组件上暂存 Game 对象的引用

    newStar.getComponent('Star').game = this; // 重置计时器，根据消失时间范围随机取一个值

    this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);
    this.timer = 0;
  },

  /**
   * 移除旧的节点
   * 添加新节点
   */
  spawnBottomCard: function spawnBottomCard() {
    if (this.playerControlNodeArray.length > 0) {
      var destoryNode = this.playerControlNodeArray;
      PokerUtil.destoryArray(destoryNode);
      this.playerControlNodeArray = [];
    }

    console.log("spawnBottomCard " + this.pokerPlayer[0].length);
    this.createBottomCard();
  },
  createBottomCard: function createBottomCard() {
    var startPosition = 0;

    for (var i = 0; i < this.pokerPlayer[0].length; i++) {
      // 使用给定的模板在场景中生成一个新节点
      var newStar = cc.instantiate(this.cardPrefab); // newStar.setPicNum("i"+i);

      newStar.getComponent('Card').picNum = this.pokerPlayer[0][i];
      this.playerControlNodeArray.push(newStar); // this.node.addChild(newStar);

      this.layoutContainer.node.addChild(newStar);
      var height = this.ground.height / 2 * -1;
      startPosition = i * this.cardWidth;

      if (i > 13) {
        height = height - 150;
        startPosition = (i - 13) * this.cardWidth;
      } // newStar.setPosition(cc.v2(-200 + this.startCardPostion + startPosition, height));

    }
  },
  getNewStarPosition: function getNewStarPosition() {
    var randX = 0; // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标

    var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50; // 根据屏幕宽度，随机得到一个星星 x 坐标

    var maxX = this.node.width / 2;
    randX = (Math.random() - 0.5) * 2 * maxX; // 返回星星坐标

    return cc.v2(randX, randY);
  },
  getCardBottomPosition: function getCardBottomPosition() {
    var randX = this.currentCardPosition;
    var randY = 0;
    this.currentCardPosition = this.currentCardPosition + this.cardWidth;
    return cc.v2(randX, randY);
  },
  update: function update(dt) {// 每帧更新计时器，超过限度还没有生成新的星星
    // 就会调用游戏失败逻辑
    // if (this.timer > this.starDuration) {
    //     this.gameOver();
    //     this.enabled = false;   // disable gameOver logic to avoid load scene repeatedly
    //     return;
    // }
    // this.timer += dt;
  },
  gainScore: function gainScore() {
    this.score += 1; // 更新 scoreDisplay Label 的文字

    this.scoreDisplay.string = 'Score: ' + this.score; // 播放得分音效

    cc.audioEngine.playEffect(this.scoreAudio, false);
  },
  gameOver: function gameOver() {
    this.player.stopAllActions(); //停止 player 节点的跳跃动作

    cc.director.loadScene('game');
  },

  /**
  * 把牌发给四家
  */
  publishPokers: function publishPokers() {
    this.pokerPlayer = [];
    var pokerArray = this.cardArray.slice(0);

    for (var i = 0; i < 4; i++) {
      var playerPokerArray = [];

      for (var j = 0; j < 27; j++) {
        var pokerNum = Math.random() * pokerArray.length;
        pokerNum = parseInt(pokerNum);
        var value = pokerArray.splice(pokerNum, 1);
        playerPokerArray.push(value);
      }

      this.pokerPlayer.push(playerPokerArray);
    }

    this.spawnBottomCard();
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcR2FtZS5qcyJdLCJuYW1lcyI6WyJQb2tlclV0aWwiLCJyZXF1aXJlIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJzdGFyUHJlZmFiIiwidHlwZSIsIlByZWZhYiIsImNhcmRQcmVmYWIiLCJtYXhTdGFyRHVyYXRpb24iLCJtaW5TdGFyRHVyYXRpb24iLCJjdXJyZW50Q2FyZFBvc2l0aW9uIiwic3RhcnRDYXJkUG9zdGlvbiIsImNhcmRXaWR0aCIsImNhcmRBcnJheSIsIlN0cmluZyIsInBva2VyUGxheWVyIiwicm91bmRQb2tlciIsInBsYXllckNvbnRyb2xOb2RlQXJyYXkiLCJyZWZyZXNoQnV0dG9uIiwiQnV0dG9uIiwic2VuZEJ1dHRvbiIsImN1cnJlbnRXaW5uZXIiLCJsYXlvdXRDb250YWluZXIiLCJMYXlvdXQiLCJsYXlvdXRCb3R0b20iLCJsYXlvdXRUb3AiLCJsYXlvdXRMZWZ0IiwibGF5b3V0UmlnaHQiLCJncm91bmQiLCJOb2RlIiwicGxheWVyIiwic2NvcmVEaXNwbGF5IiwiTGFiZWwiLCJzY29yZUF1ZGlvIiwiQXVkaW9DbGlwIiwib25Mb2FkIiwiZ3JvdW5kWSIsInkiLCJoZWlnaHQiLCJ0aW1lciIsInN0YXJEdXJhdGlvbiIsImkiLCJwcmUiLCJqIiwic3RyIiwicHVzaCIsIm5vZGUiLCJvbiIsInJlZnJlc2hDYWxsYmFjayIsInNlbmRDYWxsYmFjayIsInB1Ymxpc2hQb2tlcnMiLCJzY29yZSIsImJ1dHRvbiIsInRlc3RBcnJheSIsImRlc3RvcnlBcnJheSIsImxlbmd0aCIsImdldENvbXBvbmVudCIsImlzQ2hlY2siLCJjb25zb2xlIiwibG9nIiwicXVhcnlQb2tlclZhbHVlIiwicGljTnVtIiwic2F2ZVJvdW5kUG9rZXIiLCJkZXN0cm95Iiwic3BsaWNlIiwidGVzdExvZ2ljIiwiaW5kZXgiLCJvZmZzZXQiLCJuZXdTdGFyIiwiaW5zdGFudGlhdGUiLCJzY2FsZVgiLCJzY2FsZVkiLCJhZGRDaGlsZCIsInNwYXduTmV3U3RhciIsInNldFBvc2l0aW9uIiwiZ2V0TmV3U3RhclBvc2l0aW9uIiwiZ2FtZSIsIk1hdGgiLCJyYW5kb20iLCJzcGF3bkJvdHRvbUNhcmQiLCJkZXN0b3J5Tm9kZSIsImNyZWF0ZUJvdHRvbUNhcmQiLCJzdGFydFBvc2l0aW9uIiwicmFuZFgiLCJyYW5kWSIsImp1bXBIZWlnaHQiLCJtYXhYIiwid2lkdGgiLCJ2MiIsImdldENhcmRCb3R0b21Qb3NpdGlvbiIsInVwZGF0ZSIsImR0IiwiZ2FpblNjb3JlIiwic3RyaW5nIiwiYXVkaW9FbmdpbmUiLCJwbGF5RWZmZWN0IiwiZ2FtZU92ZXIiLCJzdG9wQWxsQWN0aW9ucyIsImRpcmVjdG9yIiwibG9hZFNjZW5lIiwicG9rZXJBcnJheSIsInNsaWNlIiwicGxheWVyUG9rZXJBcnJheSIsInBva2VyTnVtIiwicGFyc2VJbnQiLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQyxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUNEQyxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUU7QUFDUjtBQUNBQyxJQUFBQSxVQUFVLEVBQUU7QUFDUixpQkFBUyxJQUREO0FBRVJDLE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDTTtBQUZELEtBRko7QUFNUkMsSUFBQUEsVUFBVSxFQUFFO0FBQ1IsaUJBQVMsSUFERDtBQUVSRixNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ007QUFGRCxLQU5KO0FBVVI7QUFDQUUsSUFBQUEsZUFBZSxFQUFFLENBWFQ7QUFZUkMsSUFBQUEsZUFBZSxFQUFFLENBWlQ7QUFhUkMsSUFBQUEsbUJBQW1CLEVBQUUsQ0FiYjtBQWNSQyxJQUFBQSxnQkFBZ0IsRUFBRSxDQWRWO0FBZVJDLElBQUFBLFNBQVMsRUFBRSxFQWZIO0FBaUJSQyxJQUFBQSxTQUFTLEVBQUUsQ0FB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QkEsQ0FBQyxFQUF4QixFQUE0QjtBQUN4QixVQUFJNkQsZ0JBQWdCLEdBQUcsRUFBdkI7O0FBQ0EsV0FBSyxJQUFJM0QsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxFQUFwQixFQUF3QkEsQ0FBQyxFQUF6QixFQUE2QjtBQUN6QixZQUFJNEQsUUFBUSxHQUFHMUIsSUFBSSxDQUFDQyxNQUFMLEtBQWdCc0IsVUFBVSxDQUFDN0MsTUFBMUM7QUFDQWdELFFBQUFBLFFBQVEsR0FBR0MsUUFBUSxDQUFDRCxRQUFELENBQW5CO0FBQ0EsWUFBSUUsS0FBSyxHQUFHTCxVQUFVLENBQUNwQyxNQUFYLENBQWtCdUMsUUFBbEIsRUFBNEIsQ0FBNUIsQ0FBWjtBQUNBRCxRQUFBQSxnQkFBZ0IsQ0FBQ3pELElBQWpCLENBQXNCNEQsS0FBdEI7QUFDSDs7QUFDRCxXQUFLMUYsV0FBTCxDQUFpQjhCLElBQWpCLENBQXNCeUQsZ0JBQXRCO0FBQ0g7O0FBQ0QsU0FBS3ZCLGVBQUw7QUFFSDtBQXRRSSxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcbiBsZXQgUG9rZXJVdGlsID0gcmVxdWlyZShcIlBva2VyVXRpbFwiKTtcbmNjLkNsYXNzKHtcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXG5cbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgIC8vIOi/meS4quWxnuaAp+W8leeUqOS6huaYn+aYn+mihOWItui1hOa6kFxuICAgICAgICBzdGFyUHJlZmFiOiB7XG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxuICAgICAgICAgICAgdHlwZTogY2MuUHJlZmFiXG4gICAgICAgIH0sXG4gICAgICAgIGNhcmRQcmVmYWI6IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICB0eXBlOiBjYy5QcmVmYWJcbiAgICAgICAgfSxcbiAgICAgICAgLy8g5pif5pif5Lqn55Sf5ZCO5raI5aSx5pe26Ze055qE6ZqP5py66IyD5Zu0XG4gICAgICAgIG1heFN0YXJEdXJhdGlvbjogMCxcbiAgICAgICAgbWluU3RhckR1cmF0aW9uOiAwLFxuICAgICAgICBjdXJyZW50Q2FyZFBvc2l0aW9uOiAwLFxuICAgICAgICBzdGFydENhcmRQb3N0aW9uOiAwLFxuICAgICAgICBjYXJkV2lkdGg6IDgwLFxuICAgICAgICBcbiAgICAgICAgY2FyZEFycmF5OiBbY2MuU3RyaW5nXSxcbiAgICAgICAgLy/liJ3lp4vniYzmlbDnu4Qg6YCG5pe26ZKIIOS4u+inkuaYr+esrOS4gOS4quaVsOe7hFxuICAgICAgICBwb2tlclBsYXllcjogW10sXG4gICAgICAgIC8v5b2T5YmN6L2u5qyh5Ye654mM6IqC54K5LFxuICAgICAgICByb3VuZFBva2VyOiBbXSxcbiAgICAgICAgLy/kuLvop5LlvZPliY3niYzoioLngrlcbiAgICAgICAgcGxheWVyQ29udHJvbE5vZGVBcnJheTogW10sXG4gICAgICAgIC8v5rSX54mMXG4gICAgICAgIHJlZnJlc2hCdXR0b246IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICB0eXBlOiBjYy5CdXR0b25cbiAgICAgICAgfSxcbiAgICAgICAgLy/lh7rniYxcbiAgICAgICAgc2VuZEJ1dHRvbjoge1xuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcbiAgICAgICAgICAgIHR5cGU6IGNjLkJ1dHRvblxuICAgICAgICB9LFxuXG4gICAgICAgIC8v5b2T5YmN5Li7XG4gICAgICAgIGN1cnJlbnRXaW5uZXI6MSxcblxuICAgICAgICBsYXlvdXRDb250YWluZXI6e1xuICAgICAgICAgICAgZGVmYXVsdDpudWxsLFxuICAgICAgICAgICAgdHlwZTpjYy5MYXlvdXRcbiAgICAgICAgfSxcbiAgICAgICAgbGF5b3V0Qm90dG9tOntcbiAgICAgICAgICAgIGRlZmF1bHQ6bnVsbCxcbiAgICAgICAgICAgIHR5cGU6Y2MuTGF5b3V0XG4gICAgICAgIH0sXG4gICAgICAgIGxheW91dFRvcDp7XG4gICAgICAgICAgICBkZWZhdWx0Om51bGwsXG4gICAgICAgICAgICB0eXBlOmNjLkxheW91dFxuICAgICAgICB9LFxuICAgICAgICBsYXlvdXRMZWZ0OntcbiAgICAgICAgICAgIGRlZmF1bHQ6bnVsbCxcbiAgICAgICAgICAgIHR5cGU6Y2MuTGF5b3V0XG4gICAgICAgIH0sXG4gICAgICAgIGxheW91dFJpZ2h0OntcbiAgICAgICAgICAgIGRlZmF1bHQ6bnVsbCxcbiAgICAgICAgICAgIHR5cGU6Y2MuTGF5b3V0XG4gICAgICAgIH0sXG4gICAgICAgIC8vIOWcsOmdouiKgueCue+8jOeUqOS6juehruWumuaYn+aYn+eUn+aIkOeahOmrmOW6plxuICAgICAgICBncm91bmQ6IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICB0eXBlOiBjYy5Ob2RlXG4gICAgICAgIH0sXG4gICAgICAgIC8vIHBsYXllciDoioLngrnvvIznlKjkuo7ojrflj5bkuLvop5LlvLnot7PnmoTpq5jluqbvvIzlkozmjqfliLbkuLvop5LooYzliqjlvIDlhbNcbiAgICAgICAgcGxheWVyOiB7XG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxuICAgICAgICAgICAgdHlwZTogY2MuTm9kZVxuICAgICAgICB9LFxuICAgICAgICAvLyBzY29yZSBsYWJlbCDnmoTlvJXnlKhcbiAgICAgICAgc2NvcmVEaXNwbGF5OiB7XG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxuICAgICAgICAgICAgdHlwZTogY2MuTGFiZWxcbiAgICAgICAgfSxcbiAgICAgICAgLy8g5b6X5YiG6Z+z5pWI6LWE5rqQXG4gICAgICAgIHNjb3JlQXVkaW86IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICB0eXBlOiBjYy5BdWRpb0NsaXBcbiAgICAgICAgfSxcbiAgICB9LFxuXG4gICAgb25Mb2FkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIOiOt+WPluWcsOW5s+mdoueahCB5IOi9tOWdkOagh1xuICAgICAgICB0aGlzLmdyb3VuZFkgPSB0aGlzLmdyb3VuZC55ICsgdGhpcy5ncm91bmQuaGVpZ2h0IC8gMjtcbiAgICAgICAgLy8g5Yid5aeL5YyW6K6h5pe25ZmoXG4gICAgICAgIHRoaXMudGltZXIgPSAwO1xuICAgICAgICB0aGlzLnN0YXJEdXJhdGlvbiA9IDA7XG4gICAgICAgIC8v5Yib5bu65Zu+54mH6LWE5rqQXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTM7IGkrKykge1xuICAgICAgICAgICAgbGV0IHByZSA9IDMgKyBpO1xuICAgICAgICAgICAgZm9yIChsZXQgaiA9IDE7IGogPCA1OyBqKyspIHtcbiAgICAgICAgICAgICAgICBsZXQgc3RyID0gXCJcIjtcbiAgICAgICAgICAgICAgICBpZiAocHJlIDwgMTApIHtcbiAgICAgICAgICAgICAgICAgICAgc3RyID0gXCIwXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHN0ciA9IHN0ciArIHByZSArIGo7XG4gICAgICAgICAgICAgICAgdGhpcy5jYXJkQXJyYXkucHVzaChzdHIpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FyZEFycmF5LnB1c2goc3RyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNhcmRBcnJheS5wdXNoKFwiMTYxXCIpO1xuICAgICAgICB0aGlzLmNhcmRBcnJheS5wdXNoKFwiMTYxXCIpO1xuICAgICAgICB0aGlzLmNhcmRBcnJheS5wdXNoKFwiMTcxXCIpO1xuICAgICAgICB0aGlzLmNhcmRBcnJheS5wdXNoKFwiMTcxXCIpO1xuXG5cbiAgICAgICAgdGhpcy5yZWZyZXNoQnV0dG9uLm5vZGUub24oJ2NsaWNrJywgdGhpcy5yZWZyZXNoQ2FsbGJhY2ssIHRoaXMpO1xuICAgICAgICB0aGlzLnNlbmRCdXR0b24ubm9kZS5vbignY2xpY2snLCB0aGlzLnNlbmRDYWxsYmFjaywgdGhpcyk7XG4gICAgICAgIHRoaXMucHVibGlzaFBva2VycygpO1xuICAgICAgICAvLyB0aGlzLnNwYXduTmV3U3RhcigpO1xuICAgICAgICAvLyDliJ3lp4vljJborqHliIZcbiAgICAgICAgdGhpcy5zY29yZSA9IDA7XG4gICAgfSxcbiAgICByZWZyZXNoQ2FsbGJhY2s6IGZ1bmN0aW9uIChidXR0b24pIHtcbiAgICAgICAgdGhpcy5wdWJsaXNoUG9rZXJzKCk7XG4gICAgfSxcbiAgICBzZW5kQ2FsbGJhY2s6IGZ1bmN0aW9uIChidXR0b24pIHtcbiAgICAgICAgbGV0IHRlc3RBcnJheT1bXTtcbiAgICAgICAgUG9rZXJVdGlsLmRlc3RvcnlBcnJheSh0aGlzLnJvdW5kUG9rZXIpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMucGxheWVyQ29udHJvbE5vZGVBcnJheS5sZW5ndGg7KSB7XG4gICAgICAgICAgICAvL+WIpOaWreaYr+WQpuWPr+WHulxuICAgICAgICAgICAgbGV0IG5vZGUgPSB0aGlzLnBsYXllckNvbnRyb2xOb2RlQXJyYXlbaV0uZ2V0Q29tcG9uZW50KCdDYXJkJyk7XG4gICAgICAgICAgICBpZiAobm9kZS5pc0NoZWNrKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJvbmlvbiDpgInkuK1cIiArIFBva2VyVXRpbC5xdWFyeVBva2VyVmFsdWUobm9kZS5waWNOdW0pKTtcbiAgICAgICAgICAgICAgICB0ZXN0QXJyYXkucHVzaChub2RlLnBpY051bSk7XG4gICAgICAgICAgICAgICAgdGhpcy5zYXZlUm91bmRQb2tlcihub2RlLnBpY051bSwgMSwgaSAqIHRoaXMuY2FyZFdpZHRoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXllckNvbnRyb2xOb2RlQXJyYXlbaV0uZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyQ29udHJvbE5vZGVBcnJheS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIHRoaXMucGxheWVyQ29udHJvbE5vZGVBcnJheVtpXS5kZXN0cm95KCk7XG4gICAgICAgIH1cbiAgICAgICAgIFBva2VyVXRpbC50ZXN0TG9naWModGVzdEFycmF5KTtcbiAgICB9LFxuICAgIC8v5L+d5a2Y5Ye654mMICAxIDIgMyA0IOmhuuaXtumSiOS9jVxuICAgIHNhdmVSb3VuZFBva2VyOiBmdW5jdGlvbiAocGljTnVtLCBpbmRleCwgb2Zmc2V0KSB7XG4gICAgICAgIHZhciBuZXdTdGFyID0gY2MuaW5zdGFudGlhdGUodGhpcy5jYXJkUHJlZmFiKTtcbiAgICAgICAgLy8gbmV3U3Rhci5zZXRQaWNOdW0oXCJpXCIraSk7XG4gICAgICAgIG5ld1N0YXIuZ2V0Q29tcG9uZW50KCdDYXJkJykucGljTnVtID0gcGljTnVtO1xuICAgICAgICBuZXdTdGFyLnNjYWxlWCA9IDAuNTtcbiAgICAgICAgbmV3U3Rhci5zY2FsZVkgPSAwLjU7XG4gICAgICAgIHRoaXMucm91bmRQb2tlci5wdXNoKG5ld1N0YXIpO1xuICAgICAgICAvLyB0aGlzLm5vZGUuYWRkQ2hpbGQobmV3U3Rhcik7XG4gICAgICAgIC8vIGxldCBoZWlnaHQgPSB0aGlzLmdyb3VuZC5oZWlnaHQgLyAyICogLTE7XG4gICAgICAgIGlmIChpbmRleCA9PT0gMSkge1xuICAgICAgICAgICAgLy8gaGVpZ2h0ID0gaGVpZ2h0ICsgMTAwO1xuICAgICAgICAgICAgdGhpcy5sYXlvdXRCb3R0b20ubm9kZS5hZGRDaGlsZChuZXdTdGFyKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBuZXdTdGFyLnNldFBvc2l0aW9uKGNjLnYyKC0xNTAgKyB0aGlzLnN0YXJ0Q2FyZFBvc3Rpb24gKyBvZmZzZXQsIGhlaWdodCkpO1xuICAgIH0sXG4gICAgc3Bhd25OZXdTdGFyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIOS9v+eUqOe7meWumueahOaooeadv+WcqOWcuuaZr+S4reeUn+aIkOS4gOS4quaWsOiKgueCuVxuICAgICAgICB2YXIgbmV3U3RhciA9IGNjLmluc3RhbnRpYXRlKHRoaXMuc3RhclByZWZhYik7XG4gICAgICAgIC8vIOWwhuaWsOWinueahOiKgueCuea3u+WKoOWIsCBDYW52YXMg6IqC54K55LiL6Z2iXG4gICAgICAgIHRoaXMubm9kZS5hZGRDaGlsZChuZXdTdGFyKTtcbiAgICAgICAgLy8g5Li65pif5pif6K6+572u5LiA5Liq6ZqP5py65L2N572uXG4gICAgICAgIG5ld1N0YXIuc2V0UG9zaXRpb24odGhpcy5nZXROZXdTdGFyUG9zaXRpb24oKSk7XG4gICAgICAgIC8vIOWcqOaYn+aYn+e7hOS7tuS4iuaaguWtmCBHYW1lIOWvueixoeeahOW8leeUqFxuICAgICAgICBuZXdTdGFyLmdldENvbXBvbmVudCgnU3RhcicpLmdhbWUgPSB0aGlzO1xuICAgICAgICAvLyDph43nva7orqHml7blmajvvIzmoLnmja7mtojlpLHml7bpl7TojIPlm7Tpmo/mnLrlj5bkuIDkuKrlgLxcbiAgICAgICAgdGhpcy5zdGFyRHVyYXRpb24gPSB0aGlzLm1pblN0YXJEdXJhdGlvbiArIE1hdGgucmFuZG9tKCkgKiAodGhpcy5tYXhTdGFyRHVyYXRpb24gLSB0aGlzLm1pblN0YXJEdXJhdGlvbik7XG4gICAgICAgIHRoaXMudGltZXIgPSAwO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICog56e76Zmk5pen55qE6IqC54K5XG4gICAgICog5re75Yqg5paw6IqC54K5XG4gICAgICovXG4gICAgc3Bhd25Cb3R0b21DYXJkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLnBsYXllckNvbnRyb2xOb2RlQXJyYXkubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgbGV0IGRlc3RvcnlOb2RlID0gdGhpcy5wbGF5ZXJDb250cm9sTm9kZUFycmF5O1xuICAgICAgICAgICAgUG9rZXJVdGlsLmRlc3RvcnlBcnJheShkZXN0b3J5Tm9kZSk7XG4gICAgICAgICAgICB0aGlzLnBsYXllckNvbnRyb2xOb2RlQXJyYXkgPSBbXTtcbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmxvZyhcInNwYXduQm90dG9tQ2FyZCBcIiArIHRoaXMucG9rZXJQbGF5ZXJbMF0ubGVuZ3RoKTtcbiAgICAgICAgdGhpcy5jcmVhdGVCb3R0b21DYXJkKClcblxuICAgIH0sXG5cbiAgICBjcmVhdGVCb3R0b21DYXJkOiBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgbGV0IHN0YXJ0UG9zaXRpb24gPSAwO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMucG9rZXJQbGF5ZXJbMF0ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIC8vIOS9v+eUqOe7meWumueahOaooeadv+WcqOWcuuaZr+S4reeUn+aIkOS4gOS4quaWsOiKgueCuVxuICAgICAgICAgICAgdmFyIG5ld1N0YXIgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLmNhcmRQcmVmYWIpO1xuICAgICAgICAgICAgLy8gbmV3U3Rhci5zZXRQaWNOdW0oXCJpXCIraSk7XG4gICAgICAgICAgICBuZXdTdGFyLmdldENvbXBvbmVudCgnQ2FyZCcpLnBpY051bSA9IHRoaXMucG9rZXJQbGF5ZXJbMF1baV07XG4gICAgICAgICAgICB0aGlzLnBsYXllckNvbnRyb2xOb2RlQXJyYXkucHVzaChuZXdTdGFyKTtcbiAgICAgICAgICAgIC8vIHRoaXMubm9kZS5hZGRDaGlsZChuZXdTdGFyKTtcbiAgICAgICAgICAgIHRoaXMubGF5b3V0Q29udGFpbmVyLm5vZGUuYWRkQ2hpbGQobmV3U3Rhcik7XG4gICAgICAgICAgICBsZXQgaGVpZ2h0ID0gdGhpcy5ncm91bmQuaGVpZ2h0IC8gMiAqIC0xO1xuICAgICAgICAgICAgc3RhcnRQb3NpdGlvbiA9IGkgKiB0aGlzLmNhcmRXaWR0aDtcbiAgICAgICAgICAgIGlmIChpID4gMTMpIHtcbiAgICAgICAgICAgICAgICBoZWlnaHQgPSBoZWlnaHQgLSAxNTBcbiAgICAgICAgICAgICAgICBzdGFydFBvc2l0aW9uID0gKGkgLSAxMykgKiB0aGlzLmNhcmRXaWR0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIG5ld1N0YXIuc2V0UG9zaXRpb24oY2MudjIoLTIwMCArIHRoaXMuc3RhcnRDYXJkUG9zdGlvbiArIHN0YXJ0UG9zaXRpb24sIGhlaWdodCkpO1xuICAgICAgICB9XG4gICAgfSxcblxuXG4gICAgZ2V0TmV3U3RhclBvc2l0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciByYW5kWCA9IDA7XG4gICAgICAgIC8vIOagueaNruWcsOW5s+mdouS9jee9ruWSjOS4u+inkui3s+i3g+mrmOW6pu+8jOmaj+acuuW+l+WIsOS4gOS4quaYn+aYn+eahCB5IOWdkOagh1xuICAgICAgICB2YXIgcmFuZFkgPSB0aGlzLmdyb3VuZFkgKyBNYXRoLnJhbmRvbSgpICogdGhpcy5wbGF5ZXIuZ2V0Q29tcG9uZW50KCdQbGF5ZXInKS5qdW1wSGVpZ2h0ICsgNTA7XG4gICAgICAgIC8vIOagueaNruWxj+W5leWuveW6pu+8jOmaj+acuuW+l+WIsOS4gOS4quaYn+aYnyB4IOWdkOagh1xuICAgICAgICB2YXIgbWF4WCA9IHRoaXMubm9kZS53aWR0aCAvIDI7XG4gICAgICAgIHJhbmRYID0gKE1hdGgucmFuZG9tKCkgLSAwLjUpICogMiAqIG1heFg7XG4gICAgICAgIC8vIOi/lOWbnuaYn+aYn+WdkOagh1xuICAgICAgICByZXR1cm4gY2MudjIocmFuZFgsIHJhbmRZKTtcbiAgICB9LFxuICAgIGdldENhcmRCb3R0b21Qb3NpdGlvbjogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcmFuZFggPSB0aGlzLmN1cnJlbnRDYXJkUG9zaXRpb247XG4gICAgICAgIHZhciByYW5kWSA9IDA7XG4gICAgICAgIHRoaXMuY3VycmVudENhcmRQb3NpdGlvbiA9IHRoaXMuY3VycmVudENhcmRQb3NpdGlvbiArIHRoaXMuY2FyZFdpZHRoO1xuICAgICAgICByZXR1cm4gY2MudjIocmFuZFgsIHJhbmRZKTtcbiAgICB9LFxuXG4gICAgdXBkYXRlOiBmdW5jdGlvbiAoZHQpIHtcbiAgICAgICAgLy8g5q+P5bin5pu05paw6K6h5pe25Zmo77yM6LaF6L+H6ZmQ5bqm6L+Y5rKh5pyJ55Sf5oiQ5paw55qE5pif5pifXG4gICAgICAgIC8vIOWwseS8muiwg+eUqOa4uOaIj+Wksei0pemAu+i+kVxuICAgICAgICAvLyBpZiAodGhpcy50aW1lciA+IHRoaXMuc3RhckR1cmF0aW9uKSB7XG4gICAgICAgIC8vICAgICB0aGlzLmdhbWVPdmVyKCk7XG4gICAgICAgIC8vICAgICB0aGlzLmVuYWJsZWQgPSBmYWxzZTsgICAvLyBkaXNhYmxlIGdhbWVPdmVyIGxvZ2ljIHRvIGF2b2lkIGxvYWQgc2NlbmUgcmVwZWF0ZWRseVxuICAgICAgICAvLyAgICAgcmV0dXJuO1xuICAgICAgICAvLyB9XG4gICAgICAgIC8vIHRoaXMudGltZXIgKz0gZHQ7XG4gICAgfSxcblxuICAgIGdhaW5TY29yZTogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnNjb3JlICs9IDE7XG4gICAgICAgIC8vIOabtOaWsCBzY29yZURpc3BsYXkgTGFiZWwg55qE5paH5a2XXG4gICAgICAgIHRoaXMuc2NvcmVEaXNwbGF5LnN0cmluZyA9ICdTY29yZTogJyArIHRoaXMuc2NvcmU7XG4gICAgICAgIC8vIOaSreaUvuW+l+WIhumfs+aViFxuICAgICAgICBjYy5hdWRpb0VuZ2luZS5wbGF5RWZmZWN0KHRoaXMuc2NvcmVBdWRpbywgZmFsc2UpO1xuICAgIH0sXG5cbiAgICBnYW1lT3ZlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnBsYXllci5zdG9wQWxsQWN0aW9ucygpOyAvL+WBnOatoiBwbGF5ZXIg6IqC54K555qE6Lez6LeD5Yqo5L2cXG4gICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZSgnZ2FtZScpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAqIOaKiueJjOWPkee7meWbm+WutlxuICAgICovXG4gICAgcHVibGlzaFBva2VyczogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnBva2VyUGxheWVyID0gW107XG4gICAgICAgIGxldCBwb2tlckFycmF5ID0gdGhpcy5jYXJkQXJyYXkuc2xpY2UoMCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgcGxheWVyUG9rZXJBcnJheSA9IFtdO1xuICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCAyNzsgaisrKSB7XG4gICAgICAgICAgICAgICAgbGV0IHBva2VyTnVtID0gTWF0aC5yYW5kb20oKSAqIHBva2VyQXJyYXkubGVuZ3RoO1xuICAgICAgICAgICAgICAgIHBva2VyTnVtID0gcGFyc2VJbnQocG9rZXJOdW0pO1xuICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHBva2VyQXJyYXkuc3BsaWNlKHBva2VyTnVtLCAxKTtcbiAgICAgICAgICAgICAgICBwbGF5ZXJQb2tlckFycmF5LnB1c2godmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5wb2tlclBsYXllci5wdXNoKHBsYXllclBva2VyQXJyYXkpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc3Bhd25Cb3R0b21DYXJkKCk7XG5cbiAgICB9LFxuICAgIFxuICAgIFxuXG5cblxufSk7XG4iXX0=