{"version":3,"sources":["assets\\scripts\\Game.js"],"names":["cc","Class","Component","properties","starPrefab","type","Prefab","cardPrefab","maxStarDuration","minStarDuration","currentCardPosition","startCardPostion","cardWidth","cardArray","String","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","onLoad","groundY","y","height","timer","starDuration","i","pre","j","str","push","spawnBottomCard","score","spawnNewStar","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","Math","random","console","log","picNum","v2","getPicNum","randX","randY","jumpHeight","maxX","width","getCardBottomPosition","update","dt","gainScore","string","audioEngine","playEffect","gameOver","stopAllActions","director","loadScene"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        cardPrefab:{\n            default:null,\n            type:cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        currentCardPosition:0,\n        startCardPostion:0,\n        cardWidth:30,\n        cardArray:[cc.String],\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        }\n    },\n\n    onLoad: function () {\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2;\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n        for(let i=0;i<13;i++){\n            let pre=3+i;\n            for(let j=1;j<5;j++){\n                let str=\"\";\n                if(pre<10){\n                    str=\"0\"; \n                }\n                str=str+pre+j;\n                this.cardArray.push(str);\n            }\n        }\n       this.spawnBottomCard();\n        // this.spawnNewStar();\n        // 初始化计分\n        this.score = 0;\n    },\n\n    spawnNewStar: function() {\n        // 使用给定的模板在场景中生成一个新节点\n        var newStar = cc.instantiate(this.starPrefab);\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n        // 在星星组件上暂存 Game 对象的引用\n        newStar.getComponent('Star').game = this;\n        // 重置计时器，根据消失时间范围随机取一个值\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n    spawnBottomCard: function() {\n        console.log(\"onion spawnBottomCard\");\n        for(let i=0;i<17;i++){\n             // 使用给定的模板在场景中生成一个新节点\n        var newStar = cc.instantiate(this.cardPrefab);\n        // newStar.setPicNum(\"i\"+i);\n        newStar.getComponent('Card').picNum=this.cardArray[i];\n        this.node.addChild(newStar);\n        newStar.setPosition(cc.v2(-200+this.startCardPostion+i*this.cardWidth,this.ground.height/2*-1));\n        \n        }\n       \n        // // 在星星组件上暂存 Game 对象的引用\n        // newStar.getComponent('Star').game = this;\n        // // 重置计时器，根据消失时间范围随机取一个值\n        // this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        // this.timer = 0;\n    },\n    getPicNum:function(){\n        return this.cardArray[4];\n\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width/2;\n        randX = (Math.random() - 0.5) * 2 * maxX;\n        // 返回星星坐标\n        return cc.v2(randX, randY);\n    },\n    getCardBottomPosition:function(){\n        var randX = this.currentCardPosition;\n        var randY = 0;\n        this.currentCardPosition=this.currentCardPosition+this.cardWidth;\n        return cc.v2(randX, randY);\n    },\n\n    update: function (dt) {\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        // if (this.timer > this.starDuration) {\n        //     this.gameOver();\n        //     this.enabled = false;   // disable gameOver logic to avoid load scene repeatedly\n        //     return;\n        // }\n        // this.timer += dt;\n    },\n\n    gainScore: function () {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score;\n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    gameOver: function () {\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\n        cc.director.loadScene('game');\n    }\n});\n"]}